{"version":3,"sources":["serviceWorker.ts","utils.ts","components/icon.tsx","layout.tsx","lib/utils.ts","lib/binomial.ts","lib/complex.ts","lib/coordinate.ts","lib/degree.ts","lib/derivative.ts","lib/fft.ts","lib/zeros.ts","lib/finance/timevalue.ts","lib/finance/bond.ts","lib/finance/loan.tsx","lib/finance/option.ts","lib/function.ts","lib/integral.ts","lib/linest.ts","lib/matrix/index.ts","lib/polynom.ts","lib/prime.ts","lib/series.ts","lib/vector.ts","lib/stat/estimate.ts","lib/stat/regression.ts","lib/stat/index.ts","App.tsx","router.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ghUrl","props","className","name","style","borderTop","borderBottom","boxShadow","menus","link","header","to","href","map","menu","i","key","children","factorial","n","k","r","divWoRest","a","b","coefficientR","Error","U","coefficient","Complex","x","y","this","c","multiply","x1","y1","y2","Math","sqrt","atan2","modulus","arg","argument","rn","cos","sin","mod","phase","exp","theta","toPolar","toCartesian","toCylindrical","z","toCartesianFromCylindrical","toSpherical","t","acos","toSphericalFromCylindrical","toCylindricalFromSpherical","toCartesianFromSpherical","toDegree","rad","PI","toRad","deg","simple","f","delta","fft","v","N","length","_","reduce","c1","c2","sum","bissection","precision","niterations","fz","newton","df","fx","abs","secant","pv","fv","pvMulti","price","m","Timevalue","yieldToMaturity","p","Zeros","mortgageMultiplier","mortgageRepayment","dueAtN","interestAtN","cumulativeInterestAtN","payoffCall","s","max","payoffPut","profit","linear","polynomial","quadratic","generic","method","dx","evalFunc","g","getMethod","simpson","trapezoidal","rectangle","linest","series","sumY","sumX","sumX2","sumXY","denom","estimatedY","xs","Matrix","m2","multiplication","transpose","determinant","gaussJordan","m1","nRow","nCol","errorsSum","row","cell","j","shape","Array","fill","splice","nRow1","nRow2","nCol1","nCol2","errorsMultiplication","w","nRows","nCols","squareConditions","d1","d2","m3","d3","column","jk","l","concat","isIdentity","filter","inverse","equationFromSegment","p1","p2","q","polyY","polyX","solve2nd","d","isPrime","slice","prime","push","geometric","geometricDerivative","geometricInfty","fibonacci","sumScalar","v1","v2","v1l","dotProduct","crossProduct","scalar","vl","mean","stddev","V","war","e","std","estimate","Linear","isArray","M","xt","preb","regression","py","covarianceWMeans","mux","muy","xi","yi","covariance","covarianceMatrix","correlation","E","autocovarianceWithN","autocovariance","autocorrelation","c0","autocorrelationWithC0","markovProcess","T","test","mu","avg","List","items","depth","itemsArraySorted","sort","compareStr","item","searchString","label","sub","Object","entries","App","NotFound","withRouter","exact","path","component","Main","history","History","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"msJAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yBClBOC,EAAQ,sCCEN,WAACC,GAAe,IAEvBC,EAAY,SADDD,EAATE,KAER,OAAO,uBAAGD,UAAWA,KCCjBE,EAAQ,CACZC,UAAW,oBACXC,aAAc,oBACdC,UAAW,sCAKPC,EAAQ,CACb,CAACC,KAAM,IAAKN,KAAM,SAGJ,WAACF,GACd,IAAMS,EAAU,gCACd,yBAAKN,MAAOA,EAAOF,UAAU,+EAC3B,wBAAIA,UAAU,sCAAqC,kBAAC,IAAD,CAAMS,GAAI,KATrD,WASR,IAAiF,+BAAO,uBAAGC,KAAMZ,GAAO,kBAAC,EAAD,CAAMG,KAAK,YACnH,yBAAKD,UAAU,wBACZM,EAAMK,KAAI,SAACC,EAAKC,GAAN,OAAY,kBAAC,IAAD,CAAMb,UAAU,gBAAgBc,IAAKD,EAAGJ,GAAIG,EAAKL,MAAOK,EAAKX,YAK1F,OAAQ,oCAAGO,EAAO,yBAAKR,UAAU,aAAaD,EAAMgB,Y,OCrBzCC,EAAY,SAAZA,EAAaC,GAAmD,IAAxCC,EAAuC,uDAA5B,EAAGC,EAAyB,uDAAd,EAC5D,OAAGF,GAAGC,EACGF,EAAUC,EAAE,EAAGC,EAAGD,EAAIE,GAGxBA,GAUIC,EAAY,SAACC,GAAD,IAAYC,EAAZ,uDAAwB,EAAxB,OAAsCD,EAAIA,EAAEC,GAAGA,GCb3DC,EAAe,SAAfA,EAAgBN,EAAWC,GACtC,GAAID,EAAE,EACJ,MAAMO,MAAM,QAGd,GAAIN,EAAE,EACJ,MAAMM,MAAM,QAGd,OAAS,IAALN,GAAUA,IAAMD,EACX,EAGC,IAANC,EACKD,EAGLC,EAAID,GACE,EAGNC,EAAIO,EAAYR,EAAG,GAAK,EACnBM,EAAaN,EAAGC,EAAIO,EAAYR,EAAE,GAAG,GAGvCM,EAAaN,EAAE,EAAGC,EAAE,GAAGK,EAAaN,EAAE,EAAGC,IAIrCQ,EAAc,SAACT,EAAWC,GAAZ,OAAiCO,EAAYR,IAAIQ,EAAYP,GAAGO,EAAYR,EAAEC,K,cCtC5FS,EAAb,WAGE,WAAYC,GAA2B,IAAhBC,EAAe,uDAAH,EAAG,yBAFtCD,OAEsC,OADtCC,OACsC,EACpCC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EALb,qDAqBWE,GACP,GAAiB,kBAANA,EACT,OAAOD,KAAKE,SAAS,IAAIL,EAAQI,IAGnC,IAAME,EAAKF,EAAEH,EAAIE,KAAKF,EAChBM,EAAKH,EAAEH,EAAIE,KAAKD,EAChBM,EAAKJ,EAAEF,EAAIC,KAAKF,EAGtB,OAAO,IAAID,EAAQM,EAFRF,EAAEF,EAAIC,KAAKD,EAEMK,EAAKC,KA/BrC,0BAkCMJ,GACF,MAAiB,kBAANA,EACF,IAAIJ,EAAQG,KAAKF,EAAIG,EAAGD,KAAKD,GAG/B,IAAIF,EAAQI,EAAEH,EAAIE,KAAKF,EAAGG,EAAEF,EAAIC,KAAKD,KAvChD,gCA2CI,OAAOO,KAAKC,KAAK,SAAAP,KAAKF,EAAG,GAAR,SAAYE,KAAKD,EAAG,MA3CzC,iCA+CI,OAAOO,KAAKE,MAAMR,KAAKD,EAAEC,KAAKF,KA/ClC,kCAmDI,OAAO,IAAID,EAAQG,KAAKF,GAAIE,KAAKD,KAnDrC,0BA2DMZ,GACF,IAAME,EAAIW,KAAKS,UACTC,EAAMV,KAAKW,WAEXC,EAAE,SAAGvB,EAAGF,GAKd,OAAO,IAAIU,EAHDe,EAAGN,KAAKO,IAAI1B,EAAEuB,GACdE,EAAGN,KAAKQ,IAAI3B,EAAEuB,OAlE5B,uCAayBK,EAAaC,GAKlC,OAAO,IAAInB,EAJDS,KAAKQ,IAAIE,GAAOD,EAChBT,KAAKO,IAAIG,GAAOD,OAf9B,KAwEaE,EAAM,SAACC,GAClB,IAAMpB,EAAIQ,KAAKO,IAAIK,GACbnB,EAAIO,KAAKQ,IAAII,GAEnB,OAAO,IAAIrB,EAAQC,EAAGC,IAGTF,IC5EFsB,EAAU,SAACrB,EAAWC,GAIjC,MAAO,CAHSO,KAAKC,KAAK,SAAAT,EAAG,GAAH,SAAOC,EAAG,IACxBO,KAAKE,MAAMT,EAAGD,KAKfsB,EAAc,SAACtB,EAAWC,GAAZ,MAA0B,CAACD,EAAEQ,KAAKO,IAAId,GAAGD,EAAEQ,KAAKQ,IAAIf,KAElEsB,EAAgB,SAACvB,EAAWC,EAAWuB,GAAwC,IAAD,EAClEH,EAAQrB,EAAGC,GADuD,mBAEzF,MAAO,CAFkF,UAEnEuB,IAGXC,EAA6B,SAACd,EAAiBC,EAAaY,GAAe,IAAD,EACtEF,EAAYX,EAASC,GADiD,mBAErF,MAAO,CAF8E,UAEvEY,IAUHE,EAAc,SAAC1B,EAAWC,EAAWuB,GAChD,IAAMjC,EAAIiB,KAAKC,KAAK,SAAAT,EAAG,GAAH,SAAOC,EAAG,GAAV,SAAcuB,EAAG,IAC/BG,EAAInB,KAAKoB,KAAKJ,EAAEjC,GAGtB,MAAO,CAACA,EAFEiB,KAAKE,MAAMT,EAAGD,GAEV2B,IAUHE,EAA6B,SAAClB,EAAiBC,EAAaY,GAAc,IAAD,EACrEH,EAAQG,EAAGb,GAD0D,mBAEpF,MAAO,CAF6E,KAEzEC,EAFyE,OAKzEkB,GAA6B,SAACvC,EAAUoC,EAAWlC,GAAe,IAAD,EACrD6B,EAAY/B,EAAGE,GADsC,mBACrEkB,EADqE,KAE5E,MAAO,CAFqE,KAE/DgB,EAAGhB,IAGLoB,GAA2B,SAACxC,EAAUoC,EAAWlC,GAC5D,IAAMO,EAAI8B,GAA2BvC,EAAGoC,EAAGlC,GAC3C,OAAOgC,EAA2BzB,EAAE,GAAIA,EAAE,GAAIA,EAAE,KCxDrCgC,GAAW,SAACC,GAAD,OAAiBA,EAAIzB,KAAK0B,GAAG,KAExCC,GAAQ,SAACC,GAAD,OAAiBA,EAAI,IAAI5B,KAAK0B,ICItCG,GAAS,SAACrC,EAAWsC,GAAZ,IAAqCC,EAArC,uDAAqD,KAArD,OAAiED,EAAEtC,EAAEuC,GAASD,EAAEtC,EAAEuC,KAAS,EAAEA,ICEtGC,GAAM,SAACC,GAClB,IAAMC,EAAID,EAAEE,OAEZ,OAAU,IAAND,EACK,GAGFD,EAAE1D,KAAI,SAAC6D,EAAGtD,GACf,OAAOmD,EAAE1D,KAAI,SAACiB,EAAGf,GACf,OAAOe,EACJI,SAASe,EAAI,EAAEX,KAAK0B,GAAG5C,EAAEL,EAAEyD,GAE3BtC,SAAS,EAAEI,KAAKC,KAAKiC,QACvBG,QAAO,SAACC,EAAIC,GAAL,OAAYD,EAAGE,IAAID,UCdpBE,GAAa,SAAbA,EAAcX,EAA0BtC,EAAWC,GAA6E,IAAlEiD,EAAiE,uDAA7C,KAAOC,EAAsC,uDAAhB,IACpH3B,GAAYxB,EAAEC,GAAG,EACjBmD,EAAYd,EAAEd,GAEpB,OAAI4B,GAAI,EAAEF,IAAc,GAAKE,GAAI,EAAEF,IAAc,GAAsB,IAAhBC,EAC9C3B,EAGN4B,EAAGd,EAAEtC,GAAK,EACJiD,EAAWX,EAAGtC,EAAGwB,EAAG0B,EAAWC,EAAY,GAG7CF,EAAWX,EAAGd,EAAGvB,EAAGiD,EAAWC,EAAY,IAGvCE,GAAS,SAATA,EAAUrD,EAAWsC,EAAyBgB,GAAkG,IAAxEJ,EAAuE,uDAAnD,MAAaC,EAAsC,uDAAhB,IACpII,EAAYjB,EAAEtC,GAEpB,OAAGQ,KAAKgD,IAAID,IAAOL,GAA6B,IAAhBC,EACvBnD,EAGFqD,EAAOrD,EAAIuD,EAAGD,EAAGtD,GAAIsC,EAAGgB,EAAIJ,EAAWC,EAAY,IAW/CM,GAAS,SAATA,EAAUzD,EAAqBsC,GAA2F,IAAlEY,EAAiE,uDAA7C,KAAOC,EAAsC,uDAAhB,IAC9GlD,EAAID,EAAE,GAAKsC,EAAEtC,EAAE,KAAKA,EAAE,GAAMA,EAAE,KAAKsC,EAAGtC,EAAE,IAAMsC,EAAEtC,EAAE,KACxD,OAAGQ,KAAKgD,IAAIvD,EAAED,EAAE,KAAOkD,GAA6B,IAAhBC,EAC3BlD,EAEFwD,EAAO,CAACxD,EAAGD,EAAE,IAAKsC,EAAGY,EAAWC,EAAY,ICtCxCO,GAAK,SAACnE,EAAWF,GAAZ,OAAiC,EAAEsE,GAAGpE,EAAGF,IAM9CsE,GAAK,SAACpE,EAAWF,GAAZ,gBAA2B,EAAEE,EAAIF,IAOtCuE,GAAU,SAACrE,EAAWF,GAAZ,OAA2B,WAAK,EAAEE,GAAMF,IAAIE,GCHtDsE,GAAQ,SAAC1D,EAAWd,EAAWJ,EAAW6E,GAAlC,OAAwDA,EAAEC,GAAa9E,EAAGI,GAAKc,EAAE4D,GAAkB9E,EAAGI,IAE9G2E,GAAkB,SAAC7D,EAAWd,EAAWyE,EAAWG,GAE/D,OAAOC,GAAa,EAAE,GAAI,MADf,SAAClE,GAAD,OAAsBiE,EAAGJ,GAAM1D,EAAGd,EAAGW,EAAG8D,OCnBxCK,GAAqB,SAAC5E,EAAUF,GAE3C,OAAOE,GADI,WAAK,EAAEA,GAAMF,KAWb+E,GAAoB,SAACH,EAAU1E,EAAUF,GAArB,OAAkC4E,EAAIE,GAAmB5E,EAAGF,IAShFgF,GAAS,SAACJ,EAAU9D,EAAUZ,EAAUF,GAA/B,OAAkD4E,EAAE,KAAD,IAAE,EAAE1E,EAAIF,GAAKc,GAAG,SAAC,EAAEZ,EAAIF,GAAG,GAAGE,GASzF+E,GAAc,SAACL,EAAU9D,EAAUZ,EAAUF,GAA/B,OAAmDgF,GAAOJ,EAAG9D,EAAGZ,EAAGF,GAAGE,GASpFgF,GAAwB,SAACN,EAAU9D,EAAUZ,EAAUF,GAA/B,OAAoD4E,EAAE1E,EAAIY,IAAI,SAAC,EAAEZ,EAAIF,GAAE,GAAGE,EAAIY,EAAEd,GClCxGmF,GAAa,SAACC,EAAWzE,GAAZ,OAA0BQ,KAAKkE,IAAI,EAAGD,EAAEzE,IAOrD2E,GAAY,SAACF,EAAWzE,GAAZ,OAA0BQ,KAAKkE,IAAI,EAAG1E,EAAEyE,IAOpDG,GAAS,SAACzE,EAAWH,GAAZ,OAA0BG,EAAIH,GCZvC6E,GAAS,SAAC7E,EAAW8D,EAAWpE,GAAvB,OAAqCoF,GAAW9E,EAAG,CAACN,EAAGoE,KAUhEiB,GAAY,SAAC/E,EAAWP,EAAWC,EAAWS,GAAlC,OAAgD2E,GAAW9E,EAAG,CAACG,EAAGT,EAAGD,KAEjFqF,GAAa,SAAC9E,EAAWP,GACpC,OAAiB,IAAbA,EAAEkD,OACG,EAGFlD,EAAEV,KAAI,SAAC0D,EAAGxD,GACf,OAAOwD,EAAE,KAAD,IAAEzC,EAAGf,MACZ4D,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,MClBbsF,GAAU,SAAC1C,EAAyB7C,EAAqBJ,GAAkD,IAAvC4F,EAAsC,uDAArB,UAC1FC,GAAazF,EAAE,GAAKA,EAAE,IAAIJ,EAE1B8F,EAAW,SAAXA,EAAY7C,EAAyBtC,EAAWN,EAAWwF,EAAYE,GAC3E,OAAGpF,EAAIN,EACE,EAGA0F,EAAE9C,EAAGtC,EAAGkF,GAAMC,EAAS7C,EAAGtC,EAAEkF,EAAIxF,EAAGwF,EAAIE,IAIlD,OAAOD,EAAS7C,EAAG7C,EAAE,GAAIA,EAAE,GAAIyF,EAAIG,GAAUJ,KAGzCI,GAAY,SAACvB,GACjB,OAAOA,GACL,IAAK,UACH,OAAOwB,GACT,IAAK,cACH,OAAOC,GACT,QACE,OAAOC,KAKPA,GAAY,SAAClD,EAAyBtC,EAAWkF,GAArC,OAA2D5C,EAAEtC,GAAGkF,GAE5EK,GAAc,SAACjD,EAAyBtC,EAAWkF,GAArC,OAA4D5C,EAAEtC,GAAGsC,EAAEtC,EAAEkF,IAAK,EAAEA,GAE1FI,GAAU,SAAChD,EAAyBtC,EAAWkF,GAArC,OAA4D5C,EAAEtC,GAAK,EAAEsC,GAAG,EAAEtC,EAAEkF,GAAI,GAAK5C,EAAEtC,EAAEkF,IAAKA,EAAG,GCpCpGO,GAAS,SAACC,GACrB,IAAMrG,EAAIqG,EAAO/C,OAEjB,GAAItD,EAAI,EACP,MAAMO,MAAM,2CAGb,IAAM+F,EAAOD,EAAO3G,KAAI,SAAA6D,GAAC,OAAIA,EAAE3C,KAAG4C,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,KACjDkG,EAAOF,EAAO3G,KAAI,SAAA6D,GAAC,OAAIA,EAAE5C,KAAG6C,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,KACjDmG,EAAQH,EAAO3G,KAAI,SAAA6D,GAAC,gBAAIA,EAAE5C,EAAG,MAAG6C,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,KACrDoG,EAAQJ,EAAO3G,KAAI,SAAA6D,GAAC,OAAIA,EAAE5C,EAAE4C,EAAE3C,KAAG4C,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,KAEtDqG,EAAQ1G,EAAEwG,EAAF,SAAUD,EAAM,GAI9B,MAAO,CAACnG,GAHGJ,EAAEyG,EAAQH,EAAKC,GAAMG,EAGrBrG,GAFAiG,EAAKE,EAAQD,EAAKE,GAAOC,IAKzBC,GAAa,SAACC,EAAD,OAAexG,EAAf,EAAeA,EAAGC,EAAlB,EAAkBA,EAAlB,OAAqEuG,EAAGlH,KAAI,SAAAiB,GACpG,MAAO,CAACC,EAAGR,EAAIO,EAAIN,EAAGM,SCtBHkG,G,WAEnB,WAAYpC,GAAa,yBADzBA,OACwB,EACtB5D,KAAK4D,EAAIA,E,gDAGPqC,GACFnD,GAAI9C,KAAK4D,EAAGqC,K,+BAGJA,GACR,OAAOC,GAAelG,KAAK4D,EAAGqC,K,kCAI9B,OAAOE,GAAUnG,KAAK4D,K,oCAItB,OAAOwC,GAAYpG,KAAK4D,K,gCAIxB,OAAOyC,GAAYrG,KAAK4D,O,KA8Bfd,GAAM,SAACwD,EAAcL,GAGhC,OAvBiB,SAACK,EAAcL,GAChC,IAAMM,EAAOD,EAAG7D,OAEhB,GAAa,IAAT8D,EACF,MAAM7G,MAAM,mBAGd,GAAI6G,IAASN,EAAGxD,OACd,MAAM/C,MAAM,oCAGd,IAAM8G,EAAOF,EAAG,GAAG7D,OAEnB,GAAI+D,IAASP,EAAG,GAAGxD,OACjB,MAAM/C,MAAM,sCAOd+G,CAAUH,EAAIL,GAEPK,EAAGzH,KAAI,SAAC6H,EAAK3H,GAClB,OAAO2H,EAAI7H,KAAI,SAAC8H,EAAMC,GACpB,OAAOD,EAAOV,EAAGlH,GAAG6H,UAmCbC,GAAQ,SAACtE,EAAYpD,EAAWyE,GAC3C,OAAO,IAAIkD,MAAM3H,GAAG4H,KAAK,IAAIlI,KAAI,SAAAiB,GAC/B,OAAOyC,EAAEyE,OAAO,EAAGpD,OAUVsC,GAAiB,SAACI,EAAcL,GAK3C,IAL6D,IAAD,EApChC,SAACK,EAAcL,GAC3C,IAAMgB,EAAQX,EAAG7D,OACXyE,EAAQjB,EAAGxD,OAEjB,GAAc,IAAVwE,EACF,MAAMvH,MAAM,qBAGd,GAAc,IAAVwH,EACF,MAAMxH,MAAM,qBAGd,IAAMyH,EAAQb,EAAG,GAAG7D,OACd2E,EAAQnB,EAAG,GAAGxD,OAIpB,GAAI0E,IAAUD,EACZ,MAAMxH,MAAM,qDAGd,MAAO,CAACuH,EAAOE,EAAOC,GAgBJC,CAAqBf,EAAIL,GADiB,mBACrD9G,EADqD,KAClDyE,EADkD,KAC/CG,EAD+C,KAGtD1E,EAAa,IAAIyH,MAAM3H,GAAG4H,KAAK,MAAMlI,KAAI,SAAAiB,GAAC,OAAI,IAAIgH,MAAM/C,GAAGgD,KAAK,MAE9DhI,EAAI,EAAGA,EAAII,EAAGJ,IACpB,IAAI,IAAI6H,EAAI,EAAGA,EAAI7C,EAAG6C,IAAK,CAEzB,IADA,IAAIU,EAAI,EACClI,EAAI,EAAGA,EAAIwE,EAAGxE,IACrBkI,GAAKhB,EAAGvH,GAAGK,GAAK6G,EAAG7G,GAAGwH,GAGxBvH,EAAEN,GAAG6H,GAAKU,EAId,OAAOjI,GAOI8G,GAAY,SAACvC,GACxB,IAAM2D,EAAQ3D,EAAEnB,OACV+E,EAAQ5D,EAAE,GAAGnB,OAEnB,OAAO,IAAIqE,MAAMU,GAAOT,KAAK,MAAMlI,KAAI,SAAC6D,EAAE3D,GACxC,OAAO,IAAI+H,MAAMS,GAAOR,KAAK,MAAMlI,KAAI,SAAC6D,EAAEkE,GACxC,OAAOhD,EAAEgD,GAAG7H,UAUJ0I,GAAmB,SAAChG,GAChC,IAAMtC,EAAIsC,EAAEgB,OACZ,GAAU,IAANtD,EACF,MAAMO,MAAM,6CAId,GAAIP,IAFMsC,EAAE,GAAGgB,OAGb,MAAM/C,MAAM,+CAGd,OAAOP,GAMIiH,GAAc,SAAdA,EAAe3E,GAC1B,IAAMtC,EAAIsI,GAAiBhG,GAE3B,GAAU,IAANtC,EACF,OAAOsC,EAAE,GAAG,GAGd,GAAU,IAANtC,EACF,OAAOsC,EAAE,GAAG,GAAGA,EAAE,GAAG,GAAKA,EAAE,GAAG,GAAGA,EAAE,GAAG,GAGxC,GAAQ,IAAJtC,EAAO,CAET,IAAMmH,EAAK,CACT,CAAC7E,EAAE,GAAG,GAAIA,EAAE,GAAG,IACf,CAACA,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGXiG,EAAKtB,EAAYE,GAGjBL,EAAK,CACT,CAACxE,EAAE,GAAG,GAAIA,EAAE,GAAG,IACf,CAACA,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGXkG,EAAKvB,EAAYH,GAGjB2B,EAAK,CACT,CAACnG,EAAE,GAAG,GAAIA,EAAE,GAAG,IACf,CAACA,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGXoG,EAAKzB,EAAYwB,GAEvB,OAAOnG,EAAE,GAAG,GAAGiG,EAAKjG,EAAE,GAAG,GAAGkG,EAAKlG,EAAE,GAAG,GAAGoG,EAG3C,OAAOpG,EAAE,GAAG5C,KAAI,SAACiB,EAAGV,GAClB,IAAMwE,EAAa,IAAIkD,MAAM3H,EAAI,GAAG4H,KAAK,MAAMlI,KAAI,SAAC6H,EAAK3H,GACvD,OAAO,IAAI+H,MAAM3H,EAAG,GAAG4H,KAAK,MAAMlI,KAAI,SAACiJ,EAAQlB,GAC7C,IAAMmB,EAAKnB,GAAKxH,EAAIwH,EAAE,EAAIA,EAE1B,OAAOnF,EAAE1C,EAAE,GAAGgJ,SAMlB,OAFU3B,EAAYxC,GAEbnC,EAAE,GAAGrC,GAAP,UAAY,EAAKA,MAEzBuD,QAAO,SAAC7C,EAAEC,GAAH,OAASD,EAAIC,MAGVsG,GAAc,SAAC2B,GAU1B,IATA,IAAM7I,EAAIsI,GAAiBO,GAGrBpE,EAAaoE,EAAEnJ,KAAI,SAAC6H,EAAKtH,GAC7B,IAAML,EAAI,IAAI+H,MAAM3H,GAAG4H,KAAK,GAE5B,OADAhI,EAAEK,GAAK,EACAsH,EAAIuB,OAAOlJ,MAPqB,WAUhCK,GAEPwE,EAAExE,GAAKwE,EAAExE,GAAGP,KAAI,SAAAiB,GAAC,OAAIA,EAAE8D,EAAExE,GAAGA,MAG5B,IAfuC,eAe9BL,GACJA,IAAMK,IACPwE,EAAE7E,GAAK6E,EAAE7E,GAAGF,KAAI,SAACiB,EAAG8G,GAAJ,OAAU9G,EAAI8D,EAAE7E,GAAGK,GAAGwE,EAAExE,GAAGwH,QAFtC7H,EAAE,EAAGA,EAAEI,EAAEJ,IAAM,EAAfA,IALFK,EAAI,EAAGA,EAAED,EAAEC,IAAM,EAAjBA,GAgBT,IAHA,IAAM8I,EAAa,IAAIpB,MAAM3H,GAGrBJ,EAAE,EAAGA,EAAEI,EAAEJ,IACfmJ,EAAWnJ,GAAK6E,EAAE7E,GAAGA,GACrB6E,EAAE7E,GAAK6E,EAAE7E,GAAGoJ,QAAO,SAACzF,EAAG3D,GAAJ,OAAUA,GAAKI,KAGpC,GAAI+I,EAAWvF,QAAO,SAACpD,EAAGC,GAAJ,OAAUD,EAAIC,OAAOL,EACzC,MAAMO,MAAM,wCAGd,OAAOkE,GAGIwE,GAAU/B,GCtPVgC,GAAsB,SAACC,EAAeC,GACjD,IAAM3E,GAAK2E,EAAGxI,EAAIuI,EAAGvI,IAAIwI,EAAGzI,EAAIwI,EAAGxI,GAGnC,MAAO,CAAE8D,IAAG4E,EAFFF,EAAGvI,EAAI6D,EAAI0E,EAAGxI,IAKb2I,GAAQ,SAAC3I,EAAD,YAAY8D,EAAyB9D,EAArC,EAAe0I,GACvBE,GAAQ,SAAC3I,EAAD,OAAY6D,EAAZ,EAAYA,EAAZ,OAAoC7D,EAApC,EAAeyI,GAA+B5E,GAEtD+E,GAAW,SAACpJ,EAAUC,EAAUS,GAC3C,IAAM2I,EAAI,SAAApJ,EAAG,GAAI,EAAED,EAAEU,EAKrB,MAAO,GAHMT,EAAIc,KAAKC,KAAKqI,KAAK,EAAErJ,KACrBC,EAAIc,KAAKC,KAAKqI,KAAK,EAAErJ,KCxBvBsJ,GAAU,SAAVA,EAAW9J,EAAWgF,GACjC,QAAGA,EAAEtB,OAAO,KACP1D,EAAEgF,EAAE,KAAO,GAAKhF,IAAMgF,EAAE,KAKpB8E,EAAQ9J,EADLgF,EAAE+E,MAAM,EAAG/E,EAAEtB,UAOdsG,GAAQ,SAAC5J,GAMpB,IAFA,IAAM4E,EAAa,CAAC,EAAE,GAClBhF,EAAI,EACDA,EAAEI,GACJJ,EAAE,KAAO,GAAK8J,GAAQ9J,EAAGgF,IAC1BA,EAAEiF,KAAKjK,GAGTA,GAAI,EAIN,MAAO,CAAC,EAAG,GAAGkJ,OAAOlE,ICtBVkF,GAAY,SAAZA,EAAanJ,EAAWX,GAAqC,IAA1BiD,EAAyB,uDAAb,EACpD/C,GAAK,WAAKS,EAAIX,EAAE,KAAM,EAAEW,GAE9B,OAAS,IAANsC,EACM/C,EAAI4J,EAAUnJ,EAAGsC,EAAE,GAGrB/C,GAOI6J,GAAsB,SAAtBA,EAAuBpJ,EAAWX,GAAqC,IAA1BiD,EAAyB,uDAAb,EAC9D/C,GAAK,GAAK,EAAIF,GAAL,SAASW,EAAGX,GAAKA,EAAE,KAAD,IAAEW,EAAI,EAAIX,IAAjC,SAAwC,EAAIW,EAAI,GAE1D,OAAS,IAANsC,EACM/C,EAAI6J,EAAoBpJ,EAAGsC,EAAE,GAG/B/C,GAGI8J,GAAiB,SAACrJ,GAAD,OAAsB,GAAG,EAAEA,IAE5CsJ,GAAY,SAAZA,EAAajK,GAA6C,IAAlCiD,EAAiC,uDAAnB,CAAC,EAAE,GACpD,GAAU,IAANjD,EACF,OAAOiD,EAF2D,MAKrDA,EAAE0G,MAAM1G,EAAEK,OAAO,EAAGL,EAAEK,QAL+B,mBAK7DlD,EAL6D,KAK1DC,EAL0D,KAM9DS,EAAIV,EAAIC,EAGd,OAFA4C,EAAE4G,KAAK/I,GAEAmJ,EAAUjK,EAAE,EAAGiD,I,SCvCXmC,GAAI,SAAChC,GAChB,OAAiB,IAAbA,EAAEE,OACG,EAGFF,EAAEI,QAAO,SAAC7C,EAAGC,GAAJ,OAAUD,EAAIC,MAQnBsJ,GAAY,SAAC9G,EAAagC,GACrC,OAAOhC,EAAE1D,KAAI,SAAAiB,GAAC,OAAIA,EAAIyE,MAGXzB,GAAM,SAACwG,EAAcC,GAChC,GAAkB,kBAAPA,EACT,OAAOF,GAAUC,EAAIC,GAGvB,IAAMC,EAAMF,EAAG7G,OAEf,GAAY,IAAR+G,EACF,MAAM9J,MAAM,wCAGd,GAAI8J,IAAQD,EAAG9G,OACb,MAAM/C,MAAM,uCAGd,OAAO4J,EAAGzK,KAAI,SAACiB,EAAGf,GAChB,OAAOe,EAAIyJ,EAAGxK,OAIL0K,GAAa,SAACH,EAAcC,GAAf,OAAgChF,GAAEzB,GAAIwG,EAAIC,KAEvDG,GAAe,SAACJ,EAAcC,GACzC,IAAMC,EAAMF,EAAG7G,OAGf,GAAY,IAAR+G,EACF,MAAM9J,MAAM,2BAGd,GAAI8J,IAAQD,EAAG9G,OACb,MAAM/C,MAAM,uCAGd,MAAO,CACL4J,EAAG,GAAGC,EAAG,GAAKD,EAAG,GAAGC,EAAG,GACvBD,EAAG,GAAGC,EAAG,GAAKD,EAAG,GAAGC,EAAG,GACvBD,EAAG,GAAGC,EAAG,GAAKD,EAAG,GAAGC,EAAG,KAIdI,GAAS,SAACpH,GACrB,IAAMqH,EAAKrH,EAAEE,OAEb,GAAW,IAAPmH,EACF,OAAO,EAGT,IAAMvK,EAAIkD,EAAEI,QAAO,SAAC7C,EAAGC,GAAJ,OAAUD,EAAC,SAAGC,EAAG6J,KAAI,GAExC,OAAO,KAAP,IAAOvK,EAAI,EAAEuK,IAGFC,GAAO,SAACjB,GACnB,GAAiB,IAAbA,EAAEnG,OACJ,MAAM/C,MAAM,wBAGd,IAAMP,EAAIyJ,EAAEnG,OAEZ,OAAO8B,GAAEqE,GAAKzJ,GCrDH2K,GAAS,SAAClB,GAAD,OAdE,SAACA,GACvB,IAAMzJ,EAAIyJ,EAAEnG,OACNoH,EAAcE,GAAOnB,GACrBoB,EAAM,GAAG7K,EAAE,GAAG4K,GAAInB,EAAE/J,KAAI,SAAAoL,GAAC,gBAAKA,EAAEJ,EAAO,OAMvCK,EAAa5J,KAAKC,KAAKyJ,GAE7B,MAAO,CAAE7K,IAAG0K,OAAMG,MAAKE,OAGcC,CAASvB,GAAGsB,KCN9BE,G,WAQnB,WAAYtK,EAAaC,GAAyB,yBAPlDD,OAOiD,OANjDC,OAMiD,OALjDmF,OAKiD,OAJjD5D,OAIiD,OAHjD/B,OAGiD,EAC5CuH,MAAMuD,QAAQtK,EAAE,KACjBC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,IAETC,KAAKF,EAAIA,EACTE,KAAKD,EAAIuK,GAAY,CAACvK,KAGxB,IAAMwK,EAAKD,GAAYtK,KAAKF,GAE5BE,KAAKkF,EAAIoF,GAAiBC,EAAIvK,KAAKF,GACnCE,KAAKsB,EAAIgJ,GAAUtK,KAAKkF,GACxB,IAAMsF,EAAOF,GAAiBC,EAAIvK,KAAKD,GACvCC,KAAKT,EAAI+K,GAAiBtK,KAAKsB,EAAGkJ,G,wDAGJ,IAAtB1K,EAAqB,uDAAjBE,KAAKF,EACjB,OAAOwK,GAAiBxK,EAAGE,KAAKT,O,KAIvBkL,GAAa,SAAC3K,EAAa4K,GAEtC,OADU,IAAIN,GAAOtK,EAAG4K,GACfnL,GClCEoL,GAAmB,SAAC7K,EAAaC,EAAa6K,EAAaC,EAAa1L,GAOnF,OANUW,EAAEjB,KAAI,SAACiM,EAAI/L,GACnB,IAAMgM,EAAKhL,EAAEhB,GACb,OAAQ+L,EAAKF,IAAMG,EAAIF,MAExBlI,QAAO,SAACpD,EAAEC,GAAH,OAASD,EAAEC,MAETL,EAAE,IAGD6L,GAAa,SAAClL,EAAaC,GAAd,OAAqC4K,GAAiB7K,EAAGC,EAAGgK,GAAOjK,GAAIiK,GAAOhK,GAAID,EAAE2C,SAGjGwI,GAAmB,SAACnL,GAC/B,IAAM2B,EAAI6I,GAAYxK,GAChB0G,EAAO/E,EAAEgB,OAIf,OAAO,IAAIqE,MAAMN,GAAMO,KAAK,MAAMlI,KAAI,SAAC6D,EAAG3D,GACxC,OAAO,IAAI+H,MAAMN,GAAMO,KAAK,MAAMlI,KAAI,SAAC6D,EAAGkE,GACxC,OAAOoE,GAAWvJ,EAAE1C,GAAI0C,EAAEmF,WAQnBsE,GAAc,SAACpL,EAAaC,GAAd,OAAqC4K,GAAiB7K,EAAEC,EAAGgK,GAAOjK,GAAIiK,GAAOhK,GAAID,EAAE2C,SAAS0I,GAASrL,GAAGqL,GAASpL,KAQ/HqL,GAAsB,SAACtL,EAAaV,EAAWD,GAC1D,OAAO6L,GAAWlL,EAAEgJ,MAAM1J,GAAIU,EAAEgJ,MAAM,EAAE3J,EAAEC,KAG/BiM,GAAiB,SAACvL,EAAaV,GAAd,OAAmCgM,GAAoBtL,EAAGV,EAAGU,EAAE2C,SAWhF6I,GAAkB,SAACxL,EAAaV,GAAd,OAFD,SAACU,EAAaV,EAAWmM,GAAzB,OAA+CF,GAAevL,EAAGV,GAAGmM,EAEhCC,CAAsB1L,EAAGV,EAAGiM,GAAevL,EAAG,KAKnG2L,GAAgB,SAACC,EAAa5L,GAAyC,wDAClF,MAAO,CAAC,IAkBG6L,GAAO,SAACC,EAAYC,EAAatH,EAAWpF,GAArC,OAAoD0M,EAAMD,IAAKrH,EAAEjE,KAAKC,KAAKpB,KCrEzF2M,GAAO,SAAPA,EAAQ7N,GAAqD,IACzD8N,EAAqB9N,EAArB8N,MADwD,EACnC9N,EAAd+N,aADiD,MACzC,EADyC,EAGhE,GAAqB,IAAjBD,EAAMtJ,OACR,OAAO,KAIT,IAAMwJ,EAAmBF,EAAMG,MAAK,SAAC3M,EAAGC,GAAJ,OA1BnB,SAACD,EAAUC,GAC5B,OAAID,EAAIC,EACC,EAGLD,EAAIC,GACE,EAGH,EAiBuC2M,CAAW5M,EAAE,GAAIC,EAAE,OAEjE,OAAO,4BACJyM,EAAiBpN,KAAI,SAACuN,GAAU,IAAD,cACfA,EADe,GACvBhN,EADuB,KACpBmD,EADoB,KAExB8J,EAAmB,uDAAmDjN,EAAnD,uBAAmEA,GACtFkN,EAAQ,uBAAG1N,KAAMyN,GAAejN,GAEhCmN,EAAY,OAANhK,EAAa,KAAO,kBAACuJ,EAAD,CAAMC,MAAOS,OAAOC,QAAQlK,GAAIyJ,MAAOA,EAAM,IAC7E,OAAO,wBAAIhN,IAAKI,GACbkN,EACAC,QAgBMG,OAVf,WACE,OAAO,yBAAKxO,UAAU,aACpB,qDAA0B,uBAAGU,KAAMZ,GAAO,kBAAC,EAAD,CAAMG,KAAK,WAErD,yDAEA,kBAAC,GAAD,CAAM4N,MAAOS,OAAOC,QAAQnM,OC7C1BqM,GAAW,kBAAM,8CAWRC,oBATf,WACE,OAAQ,kBAAC,EAAD,KACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAWC,KACnC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWJ,UCP3BM,GAAUC,IAA6B,CAC3CC,SAAUC,aAGZC,IAASC,OAAO,kBAAC,IAAD,CAAQL,QAASA,IAAS,kBAAC,GAAD,OAAuBM,SAASC,eAAe,S7B6HnF,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eaa45448.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const ghUrl = 'https://github.com/Nexysweb/math-ts';","import React from 'react';\n\nexport default (props:any) => {\n  const { name } = props;\n  const className = 'fa fa-' + name;\n  return <i className={className}/>;\n}","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { ghUrl } from './utils';\nimport Icon from './components/icon';\n\nconst style = {\n  borderTop: '1px solid #e5e5e5',\n  borderBottom: '1px solid #e5e5e5',\n  boxShadow: '0 .25rem .75rem rgba(0, 0, 0, .05)'\n}\n\nconst title = 'Math TS';\n\nconst menus = [ \n {link: '/', name: 'Main'}\n];\n\nexport default (props:any) => {\n  const header = (<header>\n    <div style={style} className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white\">\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\"><Link to={'/'}>{title}</Link> <small><a href={ghUrl}><Icon name=\"code\"/></a></small></h5>\n      <nav className=\"my-2 my-md-0 mr-md-3\">\n        {menus.map((menu,i) => <Link className=\"p-2 text-dark\" key={i} to={menu.link}>{menu.name}</Link>)}\n      </nav>\n    </div>\n  </header>);\n\n  return (<>{header}<div className=\"container\">{props.children}</div></>);\n}","// from https://bitbucket.org/jboissard/ch.nexys.math/src/master/src/main/scala/ch/nexys/math/Math.scala/*\n/**\n * factorial function\n * @return f(n) = n!\n * @param n\n *  @param k: sometimes the following i required: n!/k! = n(n-1)(n-2)...(n-k)\n */\nexport const factorial = (n: number, k: number =1, r:number = 1): number => {\n  if(n>=k){\n    return factorial(n-1, k, n * r)\n  }\n  \n  return r;\n}\n\n/**\n * division without rest\n * equivalent to floor(7/3)\n * 7 / 3 = 2\n * @param a \n * @param b \n */\nexport const divWoRest = (a: number, b: number = 2):number => (a - a%b)/b","import * as U from './utils';\n\n\n/**\n * @return binomial coefficient in recurrent mode\n * @param n \n * @param k \n * n>=1, k>=0\n */\nexport const coefficientR = (n: number, k: number):number => {\n  if (n<1) {\n    throw Error('n>=1')\n  }\n\n  if (k<0) {\n    throw Error('k>=0')\n  }\n\n  if (k=== 0 || k === n) {\n    return 1\n  }\n\n  if (k === 1) {\n    return n;\n  }\n\n  if (k > n) {\n    return -1\n  }\n\n  if (k > U.divWoRest(n, 2) + 1) {\n    return coefficientR(n, k - U.divWoRest(n,2)-1)\n  }\n\n  return coefficientR(n-1, k-1)+coefficientR(n-1, k)\n}\n\n// same as above but not using recurrent computation\nexport const coefficient = (n: number, k: number):number => U.factorial(n)/(U.factorial(k)*U.factorial(n-k));\n\n/*\nclass Pascal{\n  import scala.collection.mutable.Map\n  import scala.collection.mutable.ArrayBuffer\n  val a: Map[(Long, Long), Long] = Map(\n    ((1l,1l)  -> 1l),\n    ((0l,2l)  -> 1l),\n    ((1l,2l)  -> 1l),\n    ((2l,2l)  -> 1l)\n  )\n  \n  def coefficientS(n: Long, k: Long):Long = {\n    a.get((n,k)).map{x =>\n        x\n    }.getOrElse{\n      val b = coefficient(n, k)\n\n      a += ((n,k) -> b)\n      b\n    }\n  }\n\n  def create(n: Long):List[(Long, List[Long])] = {\n    List.tabulate(n.toInt+1)(_.toLong).map{k=>\n      coefficientS(n, k)\n    }\n\n    if(n>1){\n      create(n-1)\n    }\n    else{\n      val r:ArrayBuffer[List[Long]] = ArrayBuffer()\n\n      a.toList.groupBy(_._1._1).toList.map{a => \n        (a._1, a._2.sortBy(_._1._2).map{_._2})\n      }\n      .sortBy(_._1)\n    }\n  }\n}*/","export class Complex {\n  x:number;\n  y:number;\n  constructor(x: number, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * @see constructor overload: https://stackoverflow.com/questions/12702548/constructor-overload-in-typescript\n   * @param mod \n   * @param phase \n   */\n  static fromModAndPhase(mod: number, phase: number):Complex {\n    const x = Math.sin(phase)*mod;\n    const y = Math.cos(phase)*mod;\n\n    // z = |z|exp(jarg(z))\n    return new Complex(x, y);\n  }\n\n  multiply(c:Complex | number):Complex {\n    if (typeof c === 'number') {\n      return this.multiply(new Complex(c));\n    }\n\n    const x1 = c.x * this.x;\n    const y1 = c.x * this.y;\n    const y2 = c.y * this.x;\n    const x2 = c.y * this.y;\n\n    return new Complex(x1 - x2, y1 + y2);\n  }\n\n  sum(c:Complex | number):Complex {\n    if (typeof c === 'number') {\n      return new Complex(this.x + c, this.y);\n    }\n\n    return new Complex(c.x + this.x, c.y + this.y)\n  }\n\n  modulus():number {\n    return Math.sqrt(this.x**2 + this.y**2);\n  }\n\n  argument():number {\n    return Math.atan2(this.y,this.x);//Math.atan(this.y/this.x); //\n  }\n\n  conjugate():Complex {\n    return new Complex(this.x, -this.y)\n  }\n\n  /**\n   * raise to power `n`\n   * @param n power to be raised to\n   * https://math.stackexchange.com/questions/1397437/formula-for-raising-a-complex-number-to-a-power\n   */\n  pow(n: number) {\n    const r = this.modulus();\n    const arg = this.argument();\n\n    const rn = r**n;\n\n    const x = rn*Math.cos(n*arg);\n    const y = rn*Math.sin(n*arg);\n\n    return new Complex(x, y);\n  }\n}\n\nexport const exp = (theta:number):Complex => {\n  const x = Math.cos(theta);\n  const y = Math.sin(theta);\n\n  return new Complex(x, y);\n}\n\nexport default Complex;","/*\n  coordinates transformation\n*/\nexport const toPolar = (x: number, y: number):[number, number] => {\n  const modulus = Math.sqrt(x**2 + y**2);\n  const arg = Math.atan2(y, x);\n\n  return [modulus, arg];\n}\n\nexport const toCartesian = (x: number, y: number) => [x*Math.cos(y),x*Math.sin(y)];\n\nexport const toCylindrical = (x: number, y: number, z: number):[number, number, number] => {\n  const [modulus, arg] = toPolar(x, y);\n  return [modulus, arg, z];\n}\n\nexport const toCartesianFromCylindrical = (modulus: number, arg: number, z: number) => {\n  const [x, y] = toCartesian(modulus, arg);\n  return [x, y, z];\n}\n\n/**\n * \n * @param x \n * @param y \n * @param z \n * @return (radius r, inclination θ, azimuth φ)\n */\nexport const toSpherical = (x: number, y: number, z: number):[number, number, number] => {\n  const r = Math.sqrt(x**2 + y**2 + z**2);\n  const t = Math.acos(z/r)\n  const a = Math.atan2(y, x)\n\n  return [r, a, t];\n}\n\n/**\n * \n * @param x \n * @param y \n * @param z \n * @return (radius r, inclination θ, azimuth φ)\n */\nexport const toSphericalFromCylindrical = (modulus: number, arg: number, z:number) => {\n  const [r, a] = toPolar(z, modulus);\n  return [r, arg, a];\n}\n\nexport const toCylindricalFromSpherical = (r:number, t: number, a: number) => {\n  const [modulus, arg] = toCartesian(r, a);\n  return [arg, t, modulus];\n}\n\nexport const toCartesianFromSpherical = (r:number, t: number, a: number) => {\n  const x = toCylindricalFromSpherical(r, t, a);\n  return toCartesianFromCylindrical(x[0], x[1], x[2]);\n}\n","export const toDegree = (rad: number) => rad/Math.PI*180;\n\nexport const toRad = (deg: number) => deg/180*Math.PI;","/**\n * get derivative approx\n * @param x \n * @param f \n * @param delta :delta x value\n */\nexport const simple = (x: number, f: (x:number) => number, delta: number = .00001) => (f(x+delta) - f(x-delta))/(2*delta);\n","// https://en.wikipedia.org/wiki/Fast_Fourier_transform\nimport { exp, Complex } from './complex';\n\n/**\n * discrete fourier transform\n * todo: implement FFT \n * @param v vector of complex numbers\n */\nexport const fft = (v:Complex[]):Complex[] => {\n  const N = v.length;\n\n  if (N === 0) {\n    return [];\n  }\n\n  return v.map((_, k) => {\n    return v.map((x, i) => {\n      return x\n        .multiply(exp(2*Math.PI*k*i/N)\n        // this is not the definition of wikipedia\n        .multiply(1/Math.sqrt(N)));\n    }).reduce((c1, c2) => c1.sum(c2))\n  });\n}","\n/**\n * Bissection method\n * condition f(x)f(y)<0 (they are of opposite sign)\n * todo: use match instead of if\n * \n */\nexport const bissection = (f: (x: number) => number, x: number, y: number, precision: number = .0001, niterations: number = 1000):number => {\n  const z:number = (x+y)/2\n  const fz:number = f(z)\n\n  if((fz*(1-precision) <= 0 && fz*(1+precision) >= 0) || niterations === 0){\n    return z\n  }\n\n  if(fz*f(x) < 0){\n    return bissection(f, x, z, precision, niterations-1)\n  }\n\n  return bissection(f, z, y, precision, niterations-1)\n}\n\nexport const newton = (x: number, f: (x:number) => number, df: (x:number) => number, precision: number = .0000000001, niterations: number = 1000):number => {\n  const fx:number = f(x)\n  //println(niterations+\" \"+fx)\n  if(Math.abs(fx) <= precision || niterations === 0){\n    return x\n  }\n  \n  return newton(x - fx/df(x), f, df, precision, niterations-1);\n}\n\n// can only be implemented once `Derivative` is implemented\n//export const newtonNumeric = (x: number, f: (x:number) => number, precision: number = .0001, niterations: number = 1000): number = newton(x, f, Derivative.simple(_)(f, 0.00000001), precision, niterations-1)\n\n/**\n * secant method\n * caution do not set x so that x._1 == x._2 otherwise will lead to Infty\n * @see https://en.wikipedia.org/wiki/Secant_method\n */\nexport const secant = (x: [number, number], f: (x:number) => number, precision: number = .0001, niterations: number = 1000):number => {\n  const y = x[0] - f(x[0])*(x[0] -  x[1])/(f( x[0]) - f(x[1]))\n  if(Math.abs(y-x[0]) <= precision || niterations === 0){\n    return y;\n  }\n  return secant([y, x[0]], f, precision, niterations-1)\n}\n","import * as Zeros from '../zeros';\n\n/**\n * \n *\tpresent value\n  *\tPV/FV = 1/(1 + i/y)^n\n*/\nexport const pv = (r: number, n: number):number => 1/fv(r, n)//pow((1+r/y), -n)\n\n/**\n *\tfuture value\n  *\tFV/PV = (1 + i/y)^n\n*/\nexport const fv = (r: number, n: number) => (1+r)**n\n\n/**\n *  Sum of same cash flow over years \n *\treturns sum of present value interest (begins at 1)\n  *\t\\sum_{i=1}^N 1/(1+r)^i\n*/\nexport const pvMulti = (r: number, n: number) => (1 - (1+r)**(-n))/r\n\n\nexport const irr = (p: number, n: number) => {\n  const f = (x:number):number => -p +pvMulti(x, n)\n\n  return Zeros.secant([-.2, 1.5], f)\n}\n  \n/**\n * perpetuity\n * pyMulti when n -> infinity\n */\nexport const perpetuity = (r: number, y: number = 1) => 1/r/y\n\nexport const fvUneven = (cf: [number, number][], r: number, s: number = 0): number => cfUneven(cf, r, (x:number, y:number) => pv(x, y), s)\n\nexport const pvUneven = (cf: [number, number][], r: number, s: number = 0): number => cfUneven(cf, r, (x:number, y:number) => pv(x, y), s)\n\nexport const cfUneven = (cf: [number, number][], r: number, f: (x:number, y: number) => number, s: number = 0):number => {\n  if (cf.length === 0) {\n    return s;\n  }\n\n  const tail = cf.slice(1, cf.length);\n  const [c, n] = cf[0];\n\n  return cfUneven(tail, r, f, s+c*f(r, n))\n}","import * as Timevalue from './timevalue';\nimport * as Zeros from '../zeros';\n\n// todo:\n//const duration: number = 0\n\n//const macaulayBondDuration = (cf: number, y: number, k: number, t: number):number => 0\n\n//const convexity= 0\n\n/*\nc = coupon payment \nn = number of payments \ni = interest rate, or required yield \nm = value at maturity, or par value \np = price\n*/\nexport const price = (c: number, n: number, i: number, m: number): number => m*Timevalue.pv(i, n) + c*Timevalue.pvMulti(i, n)\n\nexport const yieldToMaturity = (c: number, n: number, m: number, p: number):number => {\n  const  f = (x:number):number => -p +price(c, n, x, m)\n  return Zeros.secant([-.2, 1.5], f)\n}\n\n","// source: https://github.com/johnb8005/realestate/blob/master/realestate-math.ipynb\nexport const mortgageMultiplier = (r:number, n:number):number => {\n  const  d = 1 - (1+r)**(-n)\n  return r/d\n}\n\n/**\n * \n * @param p \n * @param r \n * @param n \n * ref: https://en.wikipedia.org/wiki/Mortgage_calculator#Monthly_payment_formula\n */\nexport const mortgageRepayment = (p:number, r:number, n:number) => p * mortgageMultiplier(r, n);\n\n/**\n * repayment left at n\n * @param p interest due at timestep n\n * @param c monthly payment\n * @param r interest\n * @param n timestep\n */\nexport const dueAtN = (p:number, c:number, r:number, n:number):number =>p*(1+r)**n  - c*((1+r)**n -1)/r\n\n/**\n * interest share of the monthly payment at n\n * @param p interest due at timestep n\n * @param c monthly payment\n * @param r interest\n * @param n timestep\n */\nexport const interestAtN = (p:number, c:number, r:number, n:number):number => dueAtN(p, c, r, n)*r;\n\n/**\n * cumulative interest share of  all monthly payments until n\n * @param p interest due at timestep n\n * @param c monthly payment\n * @param r interest\n * @param n timestep\n */\nexport const cumulativeInterestAtN = (p:number, c:number, r:number, n:number):number => (p*r - c)*((1+r)**n-1)/r + c*n","\n/**\n* payoff of a call option (for buyer)\n* @param s: strike price at maturity\n* @param x: strike price of option\n*/\nexport const payoffCall = (s: number, x: number) => Math.max(0, s-x)\n\n/**\n* payoff of a put option (for buyer)\n* @param s: strike price at maturity\n* @param x: strike price of option\n*/\nexport const payoffPut = (s: number, x: number) => Math.max(0, x-s)\n\n/**\n* profit of option\n* @param c: payoff on option\n* @param x: premium\n*/\nexport const profit = (c: number, x: number) => c - x\n  ","// from https://bitbucket.org/jboissard/ch.nexys.math/src/master/src/main/scala/ch/nexys/math/Function.scala\n/**\n * linear function\n * @return mx +b\n * @param x \n * @param m \n * @param b \n */\nexport const linear = (x: number, m: number, b: number) => polynomial(x, [b, m]);\n\n/**\n * quadratic function\n * @param x \n * @param a \n * @param b \n * @param c \n * @return ax^2 + bx + c\n */\nexport const quadratic = (x: number, a: number, b: number, c: number) => polynomial(x, [c, b, a]);\n\nexport const polynomial = (x: number, a: number[]):number => {\n  if (a.length === 0) {\n    return 0;\n  }\n\n  return a.map((v, i)=> {\n    return v*(x**i);  \n  }).reduce((a, b) => a + b);\n}","type Method = 'simpson' | 'trapezoidal' | 'rectangle'\n\n/**\n * Numerical integration\n * @param f function to be evaluated\n * @param a interval [a,b]\n * @param n number of steps\n * @param method method\n */\nexport const generic = (f: (x:number) => number, a: [number, number], n: number, method: Method = \"simpson\"):number => {\n  const dx:number = (a[1] - a[0])/n\n\n  const evalFunc = (f: (x:number) => number, x: number, b: number, dx: number, g: (x:(x:number) => number, y:number, z:number) => number):number => {\n    if(x > b){\n      return 0\n    }\n    else{\n      return g(f, x, dx) + evalFunc(f, x+dx, b, dx, g)\n    }\n  }\n\n  return evalFunc(f, a[0], a[1], dx, getMethod(method))\n}\n\nconst getMethod = (m:string) => {\n  switch(m) {\n    case 'simpson':\n      return simpson;\n    case 'trapezoidal':\n      return trapezoidal;\n    default:\n      return rectangle\n  }\n}\n\n/* Rectangle method - http://en.wikipedia.org/wiki/Rectangle_method */\nconst rectangle = (f: (x:number) => number, x: number, dx: number):number => f(x)*dx\n/* Trapezoidal Method - http://en.wikipedia.org/wiki/Trapezoidal_rule */\nconst trapezoidal = (f: (x:number) => number, x: number, dx: number):number => (f(x)+f(x+dx))/2*dx\n/* Simpson method  - http://en.wikipedia.org/wiki/Simpson%27s_rule */\nconst simpson = (f: (x:number) => number, x: number, dx: number):number => (f(x) + 4*f((2*x+dx)/2) + f(x+dx))*dx/6\n","/**\n * find coefficient for simple regression\n * y = ax + b\n */\nexport const linest = (series:{x: number, y: number}[]):{a: number, b: number} => {\n  const n = series.length;\n\n  if (n < 1) {\n   throw Error('series length must be greater than zero')\n  }\n\n  const sumY = series.map(_ => _.y).reduce((a, b) => a + b);\n  const sumX = series.map(_ => _.x).reduce((a, b) => a + b); \n  const sumX2 = series.map(_ => _.x**2).reduce((a, b) => a + b);\n  const sumXY = series.map(_ => _.x*_.y).reduce((a, b) => a + b);\n\n  const denom = n*sumX2 - sumX**2;\n  const a = (n*sumXY - sumY*sumX)/denom;\n  const b = (sumY*sumX2 - sumX*sumXY)/denom;\n  \n  return {a, b}\n}\n\nexport const estimatedY = (xs:number[], {a, b}:{a:number, b:number}):{x:number, y:number}[] => xs.map(x => {\n  return {y: a * x + b, x};\n});","import * as T from '../type';\n\nexport default class Matrix {\n  m:T.Matrix;\n  constructor(m:T.Matrix) {\n    this.m = m;\n  }\n\n  sum(m2: T.Matrix) {\n    sum(this.m, m2);\n  }\n\n  multiply (m2: T.Matrix) {\n    return multiplication(this.m, m2);\n  }\n\n  transpose() {\n    return transpose(this.m);\n  }\n\n  determinant() {\n    return determinant(this.m);\n  }\n\n  inverse () {\n    return gaussJordan(this.m);\n  }\n}\n\n/**\n * \n * @param m1 matrix 1\n * @param m2 matrix 2\n * @return nrow and ncol\n */\nconst errorsSum  = (m1: T.Matrix, m2: T.Matrix):[number, number] => {\n  const nRow = m1.length;\n\n  if (nRow === 0) {\n    throw Error('matrix is empty')\n  }\n\n  if (nRow !== m2.length) {\n    throw Error('same number of lines is expected')\n  }\n\n  const nCol = m1[0].length;\n\n  if (nCol !== m2[0].length) {\n    throw Error('same number of columns is expected')\n  }\n\n  return [nRow, nCol];\n}\n\nexport const sum = (m1: T.Matrix, m2: T.Matrix) => {\n  errorsSum(m1, m2);\n\n  return m1.map((row, i) => {\n    return row.map((cell, j) => {\n      return cell + m2[i][j];\n    })\n  })\n}\n\n/**\n * \n * @param m1 matrix 1 (n x m)\n * @param m2 matrix 2 (m x p)\n * @return [n, m, p]\n */\nconst errorsMultiplication  = (m1: T.Matrix, m2: T.Matrix):[number, number, number] => {\n  const nRow1 = m1.length;\n  const nRow2 = m2.length;\n\n  if (nRow1 === 0) {\n    throw Error('matrix 1 is empty')\n  }\n\n  if (nRow2 === 0) {\n    throw Error('matrix 2 is empty')\n  }\n\n  const nCol1 = m1[0].length;\n  const nCol2 = m2[0].length;\n\n  //console.log(nRow1 + ' ' + nCol1 + ' ' + nRow2 + ' ' + nCol2)\n\n  if (nCol1 !== nRow2) {\n    throw Error('check matrix dimensions: (n x m)(m x p) = (n x p)')\n  }\n\n  return [nRow1, nCol1, nCol2];\n}\n\nexport const shape = (v:T.Vector, n: number, m: number):T.Matrix => {\n  return new Array(n).fill([]).map(x => {\n    return v.splice(0, m);\n  });\n}\n\n/**\n * multiplies matrix 1 with matrix 2\n * @see https://en.wikipedia.org/wiki/Matrix_multiplication_algorithm\n * @param m1 : matrix 1 (left)\n * @param m2 : matrix 2 (right)\n */\nexport const multiplication = (m1: T.Matrix, m2: T.Matrix) => {\n  const [n, m, p] = errorsMultiplication(m1, m2);\n\n  const r:T.Matrix = new Array(n).fill(null).map(x => new Array(p).fill(0))\n\n  for(let i = 0; i < n; i++) {\n    for(let j = 0; j < p; j++) {\n      let w = 0;\n      for (let k = 0; k < m; k++) {\n        w += m1[i][k] * m2[k][j];\n      }\n\n      r[i][j] = w\n    }    \n  }\n\n  return r;\n}\n\n/**\n * \n * @param m matrix to be transposed\n */\nexport const transpose = (m:T.Matrix):T.Matrix => {\n  const nRows = m.length;\n  const nCols = m[0].length;\n\n  return new Array(nCols).fill(null).map((_,i) => {\n    return new Array(nRows).fill(null).map((_,j) => {\n      return m[j][i];\n    })\n  })\n}\n\n/**\n * inversse\n * @see http://web2.slc.qc.ca/pcamire/201-NYC-05/pdf%20of%20videos/6/matrix_inverse_algorithm.pdf\n */\n\n export const squareConditions = (t:T.Matrix):number => {\n  const n = t.length;\n  if (n === 0) {\n    throw Error('number of rows must be greatere than zero')\n  }\n  const m = t[0].length;\n\n  if (n !== m) {\n    throw Error('number of rows must equal number of columns')\n  }\n\n  return n\n}\n\n /**\n  * deteminant\n  */\nexport const determinant = (t:T.Matrix):number => {\n  const n = squareConditions(t);\n\n  if (n === 1) {\n    return t[0][0];\n  }\n\n  if (n === 2) {\n    return t[0][0]*t[1][1] - t[0][1]*t[1][0]\n  }\n\n  if (n===3) {\n    // 1\n    const m1 = [\n      [t[1][1], t[1][2]],\n      [t[2][1], t[2][2]],\n    ];\n\n    const d1 = determinant(m1);\n\n    // 2\n    const m2 = [\n      [t[1][0], t[1][2]],\n      [t[2][0], t[2][2]],\n    ];\n\n    const d2 = determinant(m2)\n    \n    // 3\n    const m3 = [\n      [t[1][0], t[1][1]],\n      [t[2][0], t[2][1]],\n    ];\n\n    const d3 = determinant(m3);\n\n    return t[0][0]*d1 - t[0][1]*d2 + t[0][2]*d3;\n  }\n\n  return t[0].map((x, k) => {\n    const m:T.Matrix = new Array(n - 1).fill(null).map((row, i) => {\n      return new Array(n -1).fill(null).map((column, j) => {\n        const jk = j >= k ? j+1 : j;// (j + 1 + k)%(n);\n\n        return t[i+1][jk]\n      })\n    })\n\n    const d = determinant(m);\n\n    return d*t[0][k]*(-1)**(k)\n  })\n  .reduce((x,y) => x + y)\n}\n\nexport const gaussJordan = (l:T.Matrix) => {\n  const n = squareConditions(l);\n\n  // add identity matrix\n  const m:T.Matrix = l.map((row, k) => {\n    const i = new Array(n).fill(0);\n    i[k] = 1;\n    return row.concat(i as T.Vector)\n  })\n\n  for (let k = 0; k<n;k++) {\n    // normalize first row\n    m[k] = m[k].map(x => x/m[k][k])\n\n    // substract 1st row to all other rows\n    for (let i=0; i<n;i++) {\n      if(i !== k) {\n        m[i] = m[i].map((x, j) => x - m[i][k]*m[k][j])\n      }\n    }\n  }\n\n  // prepare is identity array (it should be filled with ones, otherwise singular matrix)\n  const isIdentity = new Array(n);\n\n  // remove identity matrix (and make sure it is an identity matrix)\n  for(let i=0; i<n;i++) {\n    isIdentity[i] = m[i][i];\n    m[i] = m[i].filter((_, i) => i >= n)\n  }\n\n  if (isIdentity.reduce((a, b) => a + b) !== n) {\n    throw Error('singular matrix - cannot be inverted')\n  }\n\n  return m;\n}\n\nexport const inverse = gaussJordan","interface Coordinate {\n  x: number,\n  y: number\n}\n\ninterface LinEq {\n  m: number,\n  q: number\n}\n\nexport const equationFromSegment = (p1:Coordinate, p2:Coordinate):LinEq => {\n  const m = (p2.y - p1.y)/(p2.x - p1.x);\n  const q = p1.y - m * p1.x;\n\n  return { m, q };\n}\n\nexport const polyY = (x:number, {m, q}:LinEq):number => m*x + q;\nexport const polyX = (y:number, {m, q}:LinEq):number => (y - q ) / m;\n\nexport const solve2nd = (a:number, b:number, c:number):[number, number] => {\n  const d = b**2 - 4*a*c;\n\n  const x1 = (-b + Math.sqrt(d))/(2*a);\n  const x2 = (-b - Math.sqrt(d))/(2*a);\n\n  return [x1, x2];\n}","export const isPrime = (i: number, p: number[]):boolean=> {\n  if(p.length>0){\n    if(i%p[0] === 0 && i !== p[0]){\n      return false\n    }\n\n    const d = p.slice(1, p.length)\n    return isPrime(i, d);\n  }\n  \n  return true\n}\n\nexport const prime = (n: number):number[] => {\n  // go through numbers\n  // the list is initialised with numbers `3` and `5` and begins iteration at `7` since this is the next prime number\n  // only test numbers ending with 1, 3, 7, 9 => step by 2 and `i%10!=5` (numbers ending with 5 are never prime)\n  const p:number[] = [3,5];\n  let i = 7\n  while (i<n){\n    if(i%10 !== 5 && isPrime(i, p)){\n      p.push(i);\n    }\n\n    i=i+2\n  }\n\n  // returning and adding `1` and `2` for completeness\n  return [1, 2].concat(p)\n}","/**\n * beginning at i=0 until n  \\sum_{i=f}^n r^i = (1-r^(n+1))/(1-r)\n * @param x: main arg\n * @param n: until\n * @param f: beginning at (by default 0)\n */\nexport const geometric = (x: number, n: number, f: number = 0):number => {\n  const r = (1 - (x**(n+1)))/(1-x);\n\n  if(f !== 0){\n    return r - geometric(x, f-1)\n  }\n  \n  return r;\n}\n\n/**\n * @see http://www.wolframalpha.com/input/?i=d%2Fdx+%281-x%5E%28n%2B1%29%29%2F%281-x%29\n *\n */\nexport const geometricDerivative = (x: number, n: number, f: number = 0):number => {\n  const r = (1 - (1 + n)*(x**n) + n*(x**(1 + n)))/((1 - x)**2)\n\n  if(f !== 0){\n    return r - geometricDerivative(x, f-1)\n  }\n  \n  return r\n}\n\nexport const geometricInfty = (x: number):number => 1/(1-x)\n\nexport const fibonacci = (n: number, f: number[] = [1,1]):number[] => {\n  if (n === 0) {\n    return f;\n  }\n\n  const [a, b] = f.slice(f.length-2, f.length);\n  const c = a + b;\n  f.push(c);\n\n  return fibonacci(n-1, f)//f:+f.takeRight(2).reduceLeft( _ + _ ))\n}\n\n","import * as T from './type';\n\nexport const s = (v: T.Vector) => {\n  if (v.length === 0) {\n    return 0\n  }\n\n  return v.reduce((x, y) => x + y);\n}\n\n/**\n * @return sums vector with a scalar\n * @param v : vector\n * @param s : scalar\n */\nexport const sumScalar = (v: T.Vector, s: number):T.Vector => {\n  return v.map(x => x + s);\n}\n\nexport const sum = (v1: T.Vector, v2: T.Vector | number):T.Vector => {\n  if (typeof v2 === 'number') {\n    return sumScalar(v1, v2);\n  }\n\n  const v1l = v1.length;\n\n  if (v1l === 0) {\n    throw Error('vector length must be greater than 0')\n  }\n\n  if (v1l !== v2.length) {\n    throw Error('vectors must of the the same length');\n  }\n\n  return v1.map((x, i) => {\n    return x + v2[i]\n  });\n}\n\nexport const dotProduct = (v1: T.Vector, v2: T.Vector) => s(sum(v1, v2));\n\nexport const crossProduct = (v1: T.Vector, v2: T.Vector) => {\n  const v1l = v1.length;\n\n\n  if (v1l !== 3) {\n    throw Error('vector length must be 3')\n  }\n\n  if (v1l !== v2.length) {\n    throw Error('vectors must of the the same length');\n  }\n\n  return [\n    v1[1]*v2[2] - v1[2]*v2[1],\n    v1[2]*v2[0] - v1[0]*v2[2],\n    v1[0]*v2[1] - v1[1]*v2[0]\n  ]\n}\n\nexport const scalar = (v:T.Vector):number => {\n  const vl = v.length;\n\n  if (vl === 0) {\n    return 0;\n  }\n\n  const r = v.reduce((x, y) => x + y**vl, 0);\n\n  return r**(1/vl);\n}\n\nexport const mean = (d:T.Vector):number => {\n  if (d.length === 0) {\n    throw Error('can\\'t be of length 0')\n  }\n\n  const n = d.length;\n\n  return s(d) / n\n}","import * as T from '../type';\nimport * as V from '../vector';\n\ninterface Estimate {\n  n: number, mean: number, war: number, std: number\n}\n\n/**\n * Sample Estimates\n * returns sample mean and standard deviation\n * \n */\nexport const estimate = (d: T.Vector):Estimate => {\n  const n = d.length;\n  const mean:number = V.mean(d);\n  const war = 1/(n-1)*V.s(d.map(e => (e-mean)**2));\n\n  /**\n   * sample standard deviation\n   * @see Bessel correction\n   */\n  const std:number = Math.sqrt(war);\n\n  return { n, mean, war, std };\n}\n\nexport const stddev = (d: T.Vector) => estimate(d).std;\n\n\n\n","// taken from https://bitbucket.org/jboissard/ch.nexys.math/src/master/src/main/scala/ch/nexys/regression/Linear.scala\n// http://www.maths.qmul.ac.uk/~bb/SM_I_2013_LecturesWeek_6.pdf\nimport * as M from '../matrix'\nimport * as T from '../type';\n\n/*\n\tfinds best coefficient according to least square for liner regression\n\n\tsolves:\n\t\t\ty\t\t=  X \t\ta\n\t\t\t[n x 1]\t= [n x m] [m x 1]\n\t\n\tConstructor #1: for y = mx +q (only one dimension)\n\t@params x_in: horizontal vector\n\t@params y_in: vertical vector\n\n\tConstructor #2: general case\n\t@params x: input matrix (with dummy column of ones, if wished)\n\t@params y: output\n*/\nexport default class Linear{\n  x:T.Matrix;\n  y:T.Matrix;\n  g:T.Matrix;\n  z:T.Matrix;\n  a:T.Matrix;\n\n\n  constructor(x: T.Matrix, y: T.Matrix | T.Vector) {\n    if(Array.isArray(y[0])) {\n      this.x = x;\n      this.y = y as T.Matrix;\n    } else {\n      this.x = x;\n      this.y = M.transpose([y as T.Vector]);\n    }\n\n    const xt = M.transpose(this.x)\n    // Grammian Matrix - http://en.wikipedia.org/wiki/Gramian_matrix\n    this.g = M.multiplication(xt, this.x);\n    this.z = M.inverse(this.g);\n    const preb = M.multiplication(xt, this.y);\n    this.a = M.multiplication(this.z, preb);\n  }\n\n  estimateY(x = this.x):T.Matrix {\n    return M.multiplication(x, this.a)\n  }\n}\n\nexport const regression = (x: T.Matrix, py: T.Vector) => {\n  const L = new Linear(x, py);\n  return L.a;\n}","import * as V from '../vector';\nimport * as E from './estimate';\nimport * as T from '../type';\nimport * as M from '../matrix';\n\nimport * as Regresion from './regression';\n\nexport { Regresion};\n\n/**\n * computes covariance\n * @param  x: input vector 1\n * @param  y: input vector 2\n * @param  mux: sample mean of x\n * @param  muy: sample mean of y\n * @param  n: size of vector\n * @return sample covariane\n */\nexport const covarianceWMeans = (x: T.Vector, y: T.Vector, mux: number, muy: number, n:number):number => {\n  const r = x.map((xi, i) => {\n    const yi = y[i];\n    return (xi - mux)*(yi- muy)\n  }) \n  .reduce((a,b) => a+b);\n\n  return r/(n-1);\n}\n\nexport const covariance = (x: T.Vector, y: T.Vector):number => covarianceWMeans(x, y, V.mean(x), V.mean(y), x.length)\n \n\nexport const covarianceMatrix = (x:T.Matrix):T.Matrix => {\n  const t = M.transpose(x);\n  const nCol = t.length;\n\n  // todo: take advantage that the matrix is symmetric and divide computation time by 2\n  // https://en.wikipedia.org/wiki/Symmetric_matrix\n  return new Array(nCol).fill(null).map((_, i) => {\n    return new Array(nCol).fill(null).map((_, j) => {\n      return covariance(t[i], t[j])\n    })\n  })\n}\n\n/**\n * computes correlation\n */\nexport const correlation = (x: T.Vector, y: T.Vector):number => covarianceWMeans(x,y, V.mean(x), V.mean(y), x.length)/(E.stddev(x)*E.stddev(y))\n\n  /**\n   * computes sample autocovariance  \n   * @param x: input vector\n   * @param k: lag\n   * @patam n size of vector\n   */\nexport const autocovarianceWithN = (x: T.Vector, k: number, n: number):number => {\n  return covariance(x.slice(k), x.slice(0,n-k)) // ((n.toDouble-1)/n.toDouble)*\n}\n\nexport const autocovariance = (x: T.Vector, k: number):number => autocovarianceWithN(x, k, x.length)\n\n  \n/**\n * sample autocorelation\n * @param k: lag\n * @param c0: autocorrelation at time 0\n * @return autoroccelationfor chosen lag\n */\nconst autocorrelationWithC0 = (x: T.Vector, k: number, c0: number):number => autocovariance(x, k)/c0;\n\nexport const autocorrelation = (x: T.Vector, k: number):number => autocorrelationWithC0(x, k, autocovariance(x, 0));\n\n/**\n * comutes transition matrix\n */\nexport const markovProcess = (T: T.Matrix, x: T.Vector,  n: number = 1):T.Vector => {\n  return [0]\n}\n/*\n    // check if  Tcondiions are met\n    if(\n         T.cols == T.rows\n      && T.cols == x.size\n      && sum(x) == 1d\n      && n>0\n    ){\n      (x.toDenseMatrix*T).toDenseVector\n    }\n    else{\n      throw new IllegalArgumentException(\"must be positive\")\n    }\n  }\n  */\n\nexport const test = (mu: number, avg: number, s: number, n: number) => (avg - mu)/(s/Math.sqrt(n));\n\n/**\n   * abstract class for statistical tests\n   */\ninterface StatTest {\n  n: number,\n  avg: number,\n  dis: any,\n  qt: number,\n  alpha: number,\n  interval: [number, number]\n}\n\n//const tTest = (y: number[], mu: number, sigma: number, confidence: number, distribution: number):StatTest => undefined","import React from 'react';\n\nimport * as Math from './lib';\n\nimport { ghUrl} from './utils';\nimport Icon from './components/icon';\n\nconst compareStr = (a:string, b: string) => {\n  if (a > b) {\n    return 1\n  }\n\n  if (a < b) {\n    return -1\n  }\n\n  return 0;\n}\n\n/**\n * \n * @param props \n * - items: list of items\n * - depth: level of nesting\n */\nconst List = (props:{items:[string, Object][], depth?:number}) => {\n  const { items, depth = 1 } = props;\n\n  if (items.length === 0) {\n    return null;\n  }\n\n  // sort items\n  const itemsArraySorted = items.sort((a, b) => compareStr(a[0], b[0]))\n\n  return <ul>\n    {itemsArraySorted.map((item) => {\n      const [k, v] = item;\n      const searchString:string = `https://github.com/Nexysweb/math-ts/search?q=${k}&unscoped_q=${k}`\n      const label = <a href={searchString}>{k}</a> \n      // differentiate link based on nesting? depth === 1 ? <a href=\"{searchString}\"/>{k}</a> : k\n      const sub = v === null ? null : <List items={Object.entries(v)} depth={depth+1}/>\n      return <li key={k}>\n        {label}\n        {sub}\n      </li>\n    })}\n  </ul>\n}\n\nfunction App() {\n  return <div className=\"container\">\n    <p>Source can be found in <a href={ghUrl}><Icon name=\"code\"/></a></p>\n\n    <h3>List of Available Modules</h3>\n\n    <List items={Object.entries(Math)}/>\n  </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter\n} from 'react-router-dom';\n\nimport Layout from './layout';\n\nimport Main from './App';\n\nconst NotFound = () => <p>Page Not Found</p>;\n\nfunction Router() {\n  return (<Layout>\n    <Switch>\n      <Route exact path={'/'} component={Main} />\n      <Route path=\"/\" component={NotFound} />\n    </Switch>\n  </Layout>);\n}\n\nexport default withRouter(Router);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport { Router } from 'react-router-dom';\nimport * as History from 'history';\n\nimport RouterApp from './router';\n\nconst history = History.createBrowserHistory({\n  basename: process.env.PUBLIC_URL || '',\n});\n\nReactDOM.render(<Router history={history}><RouterApp/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}